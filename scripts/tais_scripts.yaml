test1:
  alias: test 1
  sequence:
    - service: input_select.select_option
      entity_id: input_select.music_controller
      data:
        option: >
         {% set target_player = 'media_player.living_room_sonos'%}
        
         {% set ns = namespace() %}
         {% set ns.primary_speaker   = 'none' %}
         {% set ns.secondary_speaker = 'none' %}
         {# set the pri_speaker and sec_speaker #}
         {% for speaker in state_attr(target_player, "sonos_group") %}
           {% if loop.index == 1 %} 
             {% set ns.primary_speaker    = speaker|regex_replace(find='media_player.', replace='', ignorecase=False) %}
           {% elif loop.index == 2 %} 
              {% set ns.secondary_speaker = speaker|regex_replace(find='media_player.', replace='', ignorecase=False) %}
           {% endif %}
         {% endfor %}

         {# use the second speaker as master speaker if target speaker is currently the master #}
         {% if target_player == ('media_player.' + ns.primary_speaker) and ns.secondary_speaker != 'none' %}
           {{ ns.secondary_speaker }}
         {% else %}
           {{ ns.primary_speaker }}
         {% endif %} 

      
add_sonos_into_speaker_group:    
  mode: queued
  alias: Add Sonos Speaker Into the Speaker Group
  fields:
    target_player:
      description: 'Sonos player name that need to be added into the group'
      example: 'media_player.master_room_sonos'
  sequence:
    - condition: template
      value_template: >
        {% if target_player is not none and target_player != false and target_player != '' %}
          true
        {% else %}
          false
        {% endif %}
        
    # The target player must not be playing anything
    - condition: template
      value_template: >
        {% if states(target_player) != 'playing' %}
          true
        {% else %}
          false
        {% endif %}
    
    # First set the target player to the same volume as the controller
    - service: media_player.volume_set
      data_template:
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}
        volume_level: >
          {% for state in states.media_player if state.entity_id == 'media_player.' + states('input_select.music_controller') %}
            {{ state.attributes.volume_level }}
          {% endfor %}
  
    # Now join the player into the group
    - service: sonos.join
      data_template:
        master: media_player.{{ states('input_select.music_controller') }}
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}



remove_sonos_from_speaker_group:
  alias: Remove Sonos Speaker From the Speaker Group and Update the Master Speaker
  mode: queued
  fields:
    target_player:
      description: 'Sonos player that need to be removed from the group'
      example: 'media_player.master_room_sonos'  
  sequence:
    - condition: template
      value_template: >
        {% if target_player is not none and target_player != false and target_player != '' %}
          true
        {% else %}
          false
        {% endif %}
  
    # The target player must be playing
    - condition: template
      value_template: >
        {% if states(target_player) == 'playing' %}
          true
        {% else %}
          false
        {% endif %}
  
    # The target is not the soundbar that is playing TV sound
    - condition: template
      value_template: >
        {% if state_attr('media_player.living_room_sonos', 'media_title') != 'TV' %}
          true
        {% else %}
          false
        {% endif %}
    
    # Update the master speaker in the group 
    - service: input_select.select_option
      entity_id: input_select.music_controller
      data:
        option: >
         {% set ns = namespace() %}
         {% set ns.primary_speaker   = 'none' %}
         {% set ns.secondary_speaker = 'none' %}
         {# set the pri_speaker and sec_speaker #}
         {% for speaker in state_attr(target_player, "sonos_group") %}
           {% if loop.index == 1 %} 
             {% set ns.primary_speaker   = speaker|regex_replace(find='media_player.', replace='', ignorecase=False) %}
           {% elif loop.index == 2 %} 
             {% set ns.secondary_speaker = speaker|regex_replace(find='media_player.', replace='', ignorecase=False) %}
           {% endif %}
         {% endfor %}

         {# use the second speaker as master speaker if target speaker is currently the master #}
         {% if target_player == ('media_player.' + ns.primary_speaker) and ns.secondary_speaker != 'none' %}
           {{ ns.secondary_speaker }}
         {% else %}
           {{ ns.primary_speaker }}
         {% endif %} 

    # The target must be the slave to be removed from the group
    - condition: template
      value_template: >
        {% if target_player != 'media_player.' + states('input_select.music_controller') %}
          true
        {% else %}
          false
        {% endif %}
    
    # Need to unjoin twice in order to make it ungroup - also will pause the music
    - service: sonos.unjoin
      data_template:
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}
    - service: sonos.unjoin
      data_template:
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}
    
    
    
pause_sonos_if_sole_speaker_group:
  alias: Pause the Sonos Speaker if it is a Sole Speaker Group
  mode: queued
  fields:
    target_player:
      description: 'Sonos player that need to be paused'
      example: 'media_player.master_room_sonos'  
  sequence:
    - condition: template
      value_template: >
        {% if target_player is not none and target_player != false and target_player != '' %}
          true
        {% else %}
          false
        {% endif %}  
        
    - condition: template
      value_template: >
        {% for speaker in state_attr(target_player, "sonos_group") %}
          {% if loop.index == 1%}  
            {% if loop.length == 1 %} 
              true  
            {% else %}      
              false      
            {% endif %}
          {% endif %}
        {% endfor %}
        
    - service: media_player.media_pause
      entity_id: >
        {% if target_player is not none %}
          {{ target_player }}
        {% endif %}
    

    
ground_toilet_light_turn_on:
  alias: Ground Toilet Light Turn On
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.ground_toilet_light
    service: switch.turn_on

ground_toilet_light_turn_off:
  alias: Ground Toilet Light Turn Off
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.ground_toilet_light
    service: switch.turn_off

kitchen_all_wall_lights_turn_on:
  alias: Kitchen All Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_ceiling_light
    service: switch.turn_on
  - data: {}
    entity_id: switch.kitchen_dining_light
    service: switch.turn_on
  - data: {}
    entity_id: switch.kitchen_floor_led
    service: switch.turn_on

kitchen_dining_lights_and_floor_led_turn_on:
  alias: Kitchen Dining Lights And Floor LED Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: switch.kitchen_dining_light
    service: switch.turn_on
  - data: {}
    entity_id: switch.kitchen_floor_led
    service: switch.turn_on

kitchen_all_lights_turn_off:
  alias: Kitchen All Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_ceiling_light
    service: switch.turn_off
  - data: {}
    entity_id: switch.kitchen_dining_light
    service: switch.turn_off
  - data: {}
    entity_id: switch.kitchen_floor_led
    service: switch.turn_off
  - data: {}
    entity_id: script.kitchen_worktop_lights_turn_off
    service: script.turn_on

# Turn Off All Kitchen Lights and Also Reset Extractor Automation
kitchen_all_lights_and_appliances_turn_off:
  alias: Kitchen All Lights And Appliances Turn Off
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: script.kitchen_extractor_turn_off
    service: script.turn_on
  - data: {}
    entity_id: script.kitchen_all_lights_turn_off
    service: script.turn_on


kitchen_worktop_lights_turn_on:
  alias: Kitchen Worktop Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_led_left_13815882
    service: switch.turn_on
  - data: {}
    entity_id: switch.kitchen_led_right_97186274
    service: switch.turn_on


kitchen_worktop_lights_turn_off:
  alias: Kitchen Worktop Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_led_left_13815882
    service: switch.turn_off
  - data: {}
    entity_id: switch.kitchen_led_right_97186274
    service: switch.turn_off


kitchen_worktop_and_ceiling_lights_turn_on:
  alias: Kitchen Worktop and Ceiling Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: script.kitchen_worktop_lights_turn_on
    service: script.turn_on
  - data: {}
    entity_id: switch.kitchen_ceiling_light
    service: switch.turn_on


kitchen_worktop_and_ceiling_lights_turn_off:
  alias: Kitchen Worktop and Ceiling Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: script.kitchen_worktop_lights_turn_off
    service: script.turn_on
  - data: {}
    entity_id: switch.kitchen_ceiling_light
    service: switch.turn_off

kitchen_worktop_and_ceiling_lights_toggle:
  alias: Kitchen Worktop and Ceiling Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - service: >
      {% if is_state('switch.kitchen_led_left_13815882', 'on') %}
         script.kitchen_worktop_and_ceiling_lights_turn_off
      {% else %}
         script.kitchen_worktop_and_ceiling_lights_turn_on
      {% endif %}



kitchen_extractor_turn_off:
  alias: Kitchen Extractor Turn Off
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_extractor
    service: switch.turn_off


kitchen_extractor_turn_on:
  alias: Kitchen Extractor Turn On
  max: 100
  mode: parallel
  sequence:
  - data: {}
    entity_id: switch.kitchen_extractor
    service: switch.turn_on


en_suite_room_all_lights_turn_on:
  alias: En-suite Room All Light Turn On
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_on
    entity_id:
     - switch.en_suite_room_ceiling_light
     - switch.en_suite_room_bedside_lamp

en_suite_room_all_lights_turn_off:
  alias: En-suite Room All Light Turn Off
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_off
    entity_id:
     - switch.en_suite_room_ceiling_light
     - switch.en_suite_room_bedside_lamp


en_suite_toilet_all_lights_turn_on:
  alias: En-suite Toilet All Lights Turn On
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.en_suite_toilet_light
    service: switch.turn_on

en_suite_toilet_all_lights_turn_off:
  alias: En-suite Toilet All Lights Turn Off
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.en_suite_toilet_light
    service: switch.turn_off

study_ceiling_light_turn_on:
  alias: Study Ceiling Light Turn On
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.study_light
    service: switch.turn_on

study_ceiling_light_turn_off:
  alias: Study Ceiling Light Turn off
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.study_light
    service: switch.turn_off



guest_toilet_ceiling_light_turn_on:
  alias: Guest Toilet Ceiling Light Turn On
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.guest_toilet_ceiling_light
    service: switch.turn_on

guest_toilet_floor_led_light_turn_on:
  alias: Guest Toilet Floor LED Turn On
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.guest_toilet_floor_led
    service: switch.turn_on


guest_toilet_all_lights_turn_off:
  alias: Guest Toilet Ceiling Light Turn Off
  mode: parallel
  max: 100
  sequence:
  - data: {}
    entity_id: switch.guest_toilet_ceiling_light
    service: switch.turn_off
  - data: {}
    entity_id: switch.guest_toilet_floor_led
    service: switch.turn_off

guest_room_all_lights_turn_on:
  alias: Guest Room All Lights Turn On
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_on
    entity_id:
      - switch.guest_room_ceiling_light

guest_room_all_lights_turn_off:
  alias: Guest Room All Lights Turn Off
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_off
    entity_id:
      - switch.guest_room_ceiling_light
      - switch.guest_room_screen_led

master_room_bedside_lights_turn_off:
  alias: Master Room Bedside Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_off
    entity_id:
      - light.master_room_lamp_near_door
      - light.master_room_lamp_near_wall

master_room_bedside_lights_turn_on:
  alias: Master Room Bedside Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_on
    entity_id:
      - light.master_room_lamp_near_door
      - light.master_room_lamp_near_wall

master_room_bedside_lights_toggle:
  alias: Master Room Bedside Lights Toggle
  max: 100
  mode: parallel
  sequence:
  - service: >
      {% if is_state('light.master_room_lamp_near_door', 'on') %}
         script.master_room_bedside_lights_turn_off
      {% else %}
         script.master_room_bedside_lights_turn_on
      {% endif %}


master_room_ceiling_lights_turn_on:
  alias: Master Room Ceiling Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - service: switch.turn_on
    entity_id:
      - switch.master_room_bed_ceiling_light
      - switch.master_room_landing_ceiling_light

master_room_ceiling_lights_turn_off:
  alias: Master Room Ceiling Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - service: switch.turn_off
    entity_id:
      - switch.master_room_bed_ceiling_light
      - switch.master_room_landing_ceiling_light


master_room_bed_led_set_dark_yellow:
  alias: Master Room Bed LED Strip Set Dark Yellow
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_on
    entity_id: light.master_room_bed_led
    data:
      brightness: 27
      rgb_color: [255, 47, 0]


master_room_bed_led_set_movie_blue:
  alias: Master Room Bed LED Strip Set Movie Blue
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_on
    entity_id: light.master_room_bed_led
    data:
      brightness: 255
      rgb_color: [102, 102, 255]


master_room_bedside_lights_set_4000k:
  alias: Master Room Bedside Lights Set To 4000k
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_on
    entity_id:
      - light.master_room_lamp_near_wall
      - light.master_room_lamp_near_door
    data:
      brightness: 255
      kelvin: 4000
  - service: light.turn_on
    entity_id:
      - light.master_room_bed_led
    data:
      brightness: 255
      kelvin: 6500

master_room_lights_turn_off:
  alias: Master Room Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - service: light.turn_off
    entity_id: light.master_room_bed_led
  - service: switch.turn_off
    entity_id:
      - switch.master_room_bed_ceiling_light
      - switch.master_room_landing_ceiling_light
      - switch.master_room_dressing_table_light
  - service: script.master_room_bedside_lights_turn_off



master_room_right_blind_toggle:
  alias: Master Room Right Blind Toggle
  mode: restart
  sequence:
  # Toggle Curtain Open State and Actual Motor
  - service: >
      {% if is_state('input_boolean.master_room_right_blind_is_open', 'on') %}
         cover.close_cover
      {% else %}
         cover.open_cover
      {% endif %}
    entity_id: cover.master_room_blind_right
  - service: input_boolean.toggle
    entity_id: input_boolean.master_room_right_blind_is_open


master_room_left_blind_toggle:
  alias: Master Room Left Blind Toggle
  mode: restart
  sequence:
  # Toggle Curtain Open State and Actual Motor
  - service: >
      {% if is_state('input_boolean.master_room_left_blind_is_open', 'on') %}
         cover.close_cover
      {% else %}
         cover.open_cover
      {% endif %}
    entity_id: cover.master_room_blind_left
  - service: input_boolean.toggle
    entity_id: input_boolean.master_room_left_blind_is_open



master_room_curtain_toggle:
  alias: Master Room Curtain Toggle
  mode: restart
  sequence:
  # Toggle Curtain Open State and Actual Motor
  - service: >
      {% if is_state('input_boolean.master_room_curtain_is_open', 'on') %}
         cover.close_cover
      {% else %}
         cover.open_cover
      {% endif %}
    entity_id: cover.master_room_curtain
  - service: input_boolean.toggle
    entity_id: input_boolean.master_room_curtain_is_open

master_room_close_all_curtains:
  alias: Master Room Close All Curtains
  mode: single
  sequence:
  - service:   cover.close_cover
    entity_id:
     - cover.master_room_curtain
     - cover.master_room_blind_left
     - cover.master_room_blind_right

master_room_open_all_curtains:
  alias: Master Room Open All Curtains
  mode: single
  sequence:
  - service:   cover.open_cover
    entity_id:
      - cover.master_room_curtain
      - cover.master_room_blind_left
      - cover.master_room_blind_right

master_toilet_all_lights_turn_on:
  alias: Master Toilet All Lights Turn On
  mode: single
  sequence:
  - service: switch.turn_on
    entity_id:
     - switch.master_toilet_light
     - switch.master_toilet_floor_led

master_toilet_all_lights_turn_off:
  alias: Master Toilet All Lights Turn Off
  mode: single
  sequence:
  - service: switch.turn_off
    entity_id:
     - switch.master_toilet_light
     - switch.master_toilet_floor_led

master_toilet_all_lights_toggle:
  alias: Master Toilet All Lights Turn Off
  mode: single
  sequence:
  - service: >
      {% if is_state('switch.master_toilet_floor_led', 'on') %}
         script.master_toilet_all_lights_turn_off
      {% else %}
         script.master_toilet_all_lights_turn_on
      {% endif %}

corridor_nighttime_lights_turn_on_from_ground_floor:
  alias: Corridor Nighttime Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.ground_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 76
      color_temp: 370
  - entity_id: light.first_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 3
      color_temp: 250


corridor_daytime_lights_turn_on_from_ground_floor:
  alias: Corridor Daytime Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.ground_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 255
      color_temp: 153
  - entity_id: light.first_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 255
      color_temp: 153



corridor_nighttime_lights_turn_on_from_first_floor:
  alias: Corridor Nighttime Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.first_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 3
      color_temp: 250
  - entity_id: light.ground_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 76
      color_temp: 370


corridor_daytime_lights_turn_on_from_first_floor:
  alias: Corridor Daytime Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.first_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 255
      color_temp: 153
  - entity_id: light.ground_corridor_ble_light
    service: light.turn_on
    data:
      brightness: 255
      color_temp: 153


corridor_lights_turn_on_from_first_floor:
  alias: Corridor Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - service:  >
      {% if now().hour >= 23 or now().hour < 7 %}
        script.corridor_nighttime_lights_turn_on_from_first_floor
      {% else %}
        script.corridor_daytime_lights_turn_on_from_first_floor
      {% endif %}

corridor_lights_turn_on_from_ground_floor:
  alias: Corridor Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - service:  >
      {% if now().hour >= 23 or now().hour < 7 %}
        script.corridor_nighttime_lights_turn_on_from_ground_floor
      {% else %}
        script.corridor_daytime_lights_turn_on_from_ground_floor
      {% endif %}


corridor_lights_turn_off:
  alias: Corridor Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.ground_corridor_ble_light
    service: light.turn_off
  - entity_id: light.first_corridor_ble_light
    service: light.turn_off


living_room_landing_lights_turn_off:
  alias: Living Room Landing Lights Turn Off
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.living_room_ble_light_near_wall
    service: light.turn_off
  - entity_id: light.living_room_ble_light_near_door
    service: light.turn_off


living_room_landing_lights_turn_on:
  alias: Living Room Landing Lights Turn On
  max: 100
  mode: parallel
  sequence:
  - entity_id: light.living_room_ble_light_near_door
    service: light.turn_on
  - entity_id: light.living_room_ble_light_near_wall
    service: light.turn_on



living_room_landing_lights_toggle:
  alias: Living Room Landing Lights Toggle
  mode: parallel
  max: 100
  sequence:
  - service: >
      {% if is_state('light.living_room_ble_light_near_door', 'on') %}
         script.living_room_landing_lights_turn_off
      {% else %}
         script.living_room_landing_lights_turn_on
      {% endif %}


living_room_all_lights_turn_on:
  alias: Living Room Ceiling All Lights Turn On
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_on
    entity_id:
      - switch.living_room_ceiling_light
      - switch.living_room_tree_light
  - service: script.living_room_landing_lights_turn_on


living_room_all_lights_turn_off:
  alias: Living Room All Lights Turn Off
  mode: parallel
  max: 100
  sequence:
  - service: switch.turn_off
    entity_id:
      - switch.living_room_ceiling_light
      - switch.garden_light
  - service: script.living_room_landing_lights_turn_off



